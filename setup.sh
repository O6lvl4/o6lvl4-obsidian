#!/usr/bin/env bash
set -euo pipefail

# Usage: ./setup.sh [vault_directory]
# If no directory is given, a folder called "YourVault" will be created in the current directory.

VAULT_DIR="${1:-$PWD/vault}"
DATE_STAMP=$(date +"%Y%m%d%H%M")
YEAR_MONTH=$(date +"%Y-%m")

echo "üìÅ Creating vault at: $VAULT_DIR"

# ----------------------------------------------------------------------------------
# 1. Create directory structure (Zettelkasten style)
# ----------------------------------------------------------------------------------
mkdir -p "$VAULT_DIR"/{00_Inbox,01_Fleeting,02_Literature,03_Permanent,04_MOCs,90_Archive,templates}
mkdir -p "$VAULT_DIR/assets/$YEAR_MONTH"

# ----------------------------------------------------------------------------------
# 2. Create .gitignore
# ----------------------------------------------------------------------------------
cat > "$VAULT_DIR/.gitignore" <<'EOF'
.obsidian/cache/
.obsidian/workspace.json
.obsidian/plugins/
.DS_Store
EOF

# ----------------------------------------------------------------------------------
# 3. Create .gitattributes and enable Git LFS for assets
# ----------------------------------------------------------------------------------
cat > "$VAULT_DIR/.gitattributes" <<'EOF'
assets/** filter=lfs diff=lfs merge=lfs -text
EOF

# ----------------------------------------------------------------------------------
# 4. Create sample markdown files
# ----------------------------------------------------------------------------------

cat > "$VAULT_DIR/00_Inbox/${DATE_STAMP}-quick-idea.md" <<EOF
# üìå „Å≤„Çâ„ÇÅ„ÅçÔºöZettelkasten „ÅÆ„É°„ÇøÊÉÖÂ†±„ÇíËá™Âãï‰ªò‰∏é„Åó„Åü„ÅÑ

- **ÊÄù„ÅÑ„Å§„Åç**  
  Êñ∞Ë¶è„Éé„Éº„Éà‰ΩúÊàêÊôÇÁÇπ„Åß ID„Éª‰ΩúÊàêÊó•ÊôÇ„Éª„É™„É≥„ÇØÂÖàÂÄôË£ú„ÇíËá™Âãï„ÅßÊåøÂÖ•„Åô„Çã„Éó„É©„Ç∞„Ç§„É≥„ÅåÊ¨≤„Åó„ÅÑ  
- **Ê¨°„Å´„ÇÑ„Çã**  
  - Obsidian API „ÇíË™øÊüª  
  - GitHub „Å´ Issue Ëµ∑Á•®
EOF

cat > "$VAULT_DIR/01_Fleeting/${DATE_STAMP}-fleeting-note.md" <<EOF
# üìù Fleeting Note ‚Äì ZK „Å®„Ç¢„Ç¶„Éà„É©„Ç§„Éä„Éº‰ΩµÁî®

- Dynalist „ÅÆÈöéÂ±§„Ç¢„Ç¶„Éà„É©„Ç§„É≥„Çí Zettelkasten „Å®„Å©„ÅÜ‰∏°Á´ã„Åô„Çã„ÅãÔºü  
- 24 ÊôÇÈñì‰ª•ÂÜÖ„Å´ Permanent „Å∏ÊòáÊ†º„Åï„Åõ„Çâ„Çå„Çã„ÅãÂà§Êñ≠„ÄÇ
EOF

cat > "$VAULT_DIR/02_Literature/${DATE_STAMP}-ahrens-zk-book-summary.md" <<EOF
# üìö Êõ∏Á±ç„É°„É¢„ÄéÂÆüË∑µÁöÑ„É°„É¢Ë°ì ZettelkastenÂÖ•ÈñÄ„Äè(S√∂nke Ahrens)

> *‚ÄúWriting is not the outcome of thinking, it is the thinking itself.‚Äù*

## Ë¶ÅÁÇπ
1. „Ç´„Éº„Éâ„ÅØ„Äå1 „Ç¢„Ç§„Éá„Ç¢ = 1 „Éé„Éº„Éà"
2. Fleeting ‚ûú Literature ‚ûú Permanent „ÅÆ‰∏âÈöéÂ±§
3. „É™„É≥„ÇØ„Å®„Çø„Ç∞„Åß„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇíÊã°Âºµ

## ÂºïÁî® & „Ç≥„É°„É≥„Éà
- p.42 „ÄåÊ∞∏Á∂ö„Éé„Éº„Éà„ÅØÊñáÁ´†„ÅÆÊúÄÂ∞èÂçò‰Ωç„Äç  
  ‚Üí „Éñ„É≠„Ç∞‰∏ãÊõ∏„Åç„Å´„ÇÇ„Åù„ÅÆ„Åæ„ÅæÊµÅÁî®„Åß„Åç„ÇãÔºÅ
EOF

cat > "$VAULT_DIR/03_Permanent/${DATE_STAMP}-principle-atomic-notes.md" <<EOF
# üß† Ê∞∏Á∂ö„Éé„Éº„ÉàÔºöÂéüÂ≠êÊÄß„Å®ÂèØÁµÑÂêà„ÅõÊÄß

**‰∏ªÂºµ**  
1 „Ç¢„Ç§„Éá„Ç¢„Çí 1 „Éï„Ç°„Ç§„É´„Å´Èñâ„ÅòËæº„ÇÅ„Çã„Åì„Å®„Åß„ÄÅ  
Âæå„Åã„Çâ„ÄåÊñáËÑà„ÇíÂ§â„Åà„Å¶ÂÜçÂà©Áî®„Äç„Åß„Åç„ÇãÔºà„Éñ„É≠„Ç∞„ÉªË´ñÊñá„ÉªË¨õÁæ©Ë≥áÊñô„Å™„Å©Ôºâ„ÄÇ

## „Å§„Å™„Åå„Çä
- [[${DATE_STAMP}-ahrens-zk-book-summary]] ‚Äî Âá∫ÂÖ∏
- [[${DATE_STAMP}-moc-zettelkasten]] ‚Äî MOC
EOF

cat > "$VAULT_DIR/04_MOCs/${DATE_STAMP}-moc-zettelkasten.md" <<EOF
# üó∫Ô∏è MOC: Zettelkasten ÈÄüÁøí„Ç¨„Ç§„Éâ

- **Ê¶ÇÂøµ**  
  - [[${DATE_STAMP}-principle-atomic-notes]] ‚Äî ÂéüÂ≠êÊÄß
- **„Éó„É≠„Çª„Çπ**  
  - [[${DATE_STAMP}-fleeting-note]] ‚Äî Fleeting ‚ûú Permanent ÊµÅ„Çå
- **ÂèÇËÄÉÊñáÁåÆ**  
  - [[${DATE_STAMP}-ahrens-zk-book-summary]]
EOF

cat > "$VAULT_DIR/90_Archive/202404020900-old-workflow.md" <<'EOF'
# üîí Êóß„ÉØ„Éº„ÇØ„Éï„É≠„ÉºÔºà2024-04-02Ôºâ

Zettelkasten Â∞éÂÖ•Ââç„Å´‰Ωø„Å£„Å¶„ÅÑ„Åü„Éï„Ç©„É´„ÉÄÊâãÂãïÊï¥ÁêÜÊñπÂºè„ÅÆ„É°„É¢„ÄÇ  
ÂøÖË¶Å„Åå„ÅÇ„Çå„Å∞ÂèÇÁÖß„Åô„Çã„Åå„ÄÅÁèæÂú®„ÅØÈùûÊé®Â•®„ÄÇ
EOF

cat > "$VAULT_DIR/templates/zettel-template.md" <<'EOF'
# <% tp.date.now("üß© YYYYMMDDHHmm") %> „Çø„Ç§„Éà„É´

- **‰∏ªÂºµ / „Ç¢„Ç§„Éá„Ç¢**  
- **ËÉåÊôØ / ÂèÇËÄÉ**  
  - [[„É™„É≥„ÇØÂÖà„Éé„Éº„Éà]]
- **„Çø„Ç∞**  
  - #zk #idea
EOF

# ----------------------------------------------------------------------------------
# 5. Initialise Git repo and Git LFS
# ----------------------------------------------------------------------------------

cd "$VAULT_DIR"

if ! command -v git >/dev/null 2>&1; then
  echo "‚ùå Git is not installed. Please install Git and run this script again."
  exit 1
fi

if ! command -v git-lfs >/dev/null 2>&1; then
  echo "‚ö†Ô∏è  git-lfs not found. Attempting to install..."
  OS="$(uname -s)"
  if [[ "$OS" == "Darwin" ]] && command -v brew >/dev/null 2>&1; then
    brew install git-lfs
  elif [[ "$OS" == "Linux" ]] && command -v apt-get >/dev/null 2>&1; then
    sudo apt-get update && sudo apt-get install -y git-lfs
  elif [[ "$OS" == "Linux" ]] && command -v yum >/dev/null 2>&1; then
    sudo yum install -y git-lfs
  else
    echo "‚ùå Automatic install failed. Install git-lfs manually."
    exit 1
  fi
fi

if [ ! -d ".git" ]; then
  git init
fi

git lfs install --skip-repo
git add .gitattributes
git lfs track "assets/**"

# ----------------------------------------------------------------------------------
# 6. Initial commit
# ----------------------------------------------------------------------------------
git add .
git commit -m "chore: init Zettelkasten vault with Git LFS and sample notes"

echo "‚úÖ Setup complete! Vault directory: $VAULT_DIR"
echo "üëâ To add a remote and push:"
echo "   cd \"$VAULT_DIR\" && git remote add origin <URL-of-your-repo>"
echo "   git push -u origin main"
